<Styles xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--
    Card Styles for Arabiyya Theme

    This file contains the following card styles:
    - Base Card: foundation style that all cards inherit from
    - Standard Card: basic card with default elevation
    - Elevated Card: card with more pronounced shadow
    - Outlined Card: card with border instead of elevation
    - Interactive Card: card with hover/press states
    - Action Card: card with action buttons
    - Media Card: card with image/media area

    Usage examples:
    <Border Classes="Card"> - Basic card
    <Border Classes="Card Elevated"> - Card with more elevation
    <Border Classes="Card Outlined"> - Card with border instead of shadow
    <Border Classes="Card Interactive"> - Card with hover effects
  -->

  <!--  Base Card Style (foundation for all cards)  -->
  <Style Selector="Border.Card">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}" />
    <Setter Property="CornerRadius" Value="8" />
    <Setter Property="Padding" Value="16" />
    <Setter Property="BoxShadow" Value="0 1 3 0 #0000001A, 0 1 2 0 #0000000F" />
    <Setter Property="Margin" Value="0,0,0,16" />
    <Setter Property="MaxWidth" Value="800" />
    <Setter Property="Transitions">
      <Transitions>
        <BoxShadowsTransition Property="BoxShadow" Duration="0:0:0.2" />
        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2" />
      </Transitions>
    </Setter>
  </Style>

  <!--  Standard Card - Default card style  -->
  <Style Selector="Border.Card.Standard">
    <!--  Standard Card uses the Base Card style by default  -->
  </Style>

  <!--  Elevated Card - More pronounced shadow  -->
  <Style Selector="Border.Card.Elevated">
    <Setter Property="BoxShadow" Value="0 4 6 -1 #0000001A, 0 2 4 -1 #0000000F" />
    <Setter Property="Background" Value="{DynamicResource Brush.Surface.Elevated1}" />
  </Style>

  <!--  Outlined Card - Border instead of shadow  -->
  <Style Selector="Border.Card.Outlined">
    <Setter Property="BoxShadow" Value="none" />
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}" />
    <Setter Property="BorderThickness" Value="1" />
  </Style>

  <!--  Interactive Card - With hover/press states  -->
  <Style Selector="Border.Card.Interactive">
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="RenderTransform" Value="none" />
  </Style>

  <Style Selector="Border.Card.Interactive:pointerover">
    <Setter Property="BoxShadow" Value="0 10 15 -3 #0000001A, 0 4 6 -2 #0000000D" />
    <Setter Property="RenderTransform" Value="translateY(-2px)" />
  </Style>

  <Style Selector="Border.Card.Interactive:pressed">
    <Setter Property="BoxShadow" Value="0 1 3 0 #0000001A, 0 1 2 0 #0000000F" />
    <Setter Property="RenderTransform" Value="translateY(0px)" />
  </Style>

  <!--  Primary Card - Card with primary color styling  -->
  <Style Selector="Border.Card.Primary">
    <Setter Property="Background" Value="{DynamicResource Brush.Primary}" />
  </Style>

  <Style Selector="Border.Card.Primary TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.OnPrimary}" />
  </Style>

  <!--  Secondary Card - Card with secondary color styling  -->
  <Style Selector="Border.Card.Secondary">
    <Setter Property="Background" Value="{DynamicResource Brush.Secondary}" />
  </Style>

  <Style Selector="Border.Card.Secondary TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.OnSecondary}" />
  </Style>

  <!--  Success Card  -->
  <Style Selector="Border.Card.Success">
    <Setter Property="Background" Value="{DynamicResource Brush.Success}" />
  </Style>

  <Style Selector="Border.Card.Success TextBlock">
    <Setter Property="Foreground" Value="White" />
  </Style>

  <!--  Error Card  -->
  <Style Selector="Border.Card.Error">
    <Setter Property="Background" Value="{DynamicResource Brush.Error}" />
  </Style>

  <Style Selector="Border.Card.Error TextBlock">
    <Setter Property="Foreground" Value="White" />
  </Style>

  <!--  Warning Card  -->
  <Style Selector="Border.Card.Warning">
    <Setter Property="Background" Value="{DynamicResource Brush.Warning}" />
  </Style>

  <Style Selector="Border.Card.Warning TextBlock">
    <Setter Property="Foreground" Value="Black" />
  </Style>

  <!--  Info Card  -->
  <Style Selector="Border.Card.Info">
    <Setter Property="Background" Value="{DynamicResource Brush.Info}" />
  </Style>

  <Style Selector="Border.Card.Info TextBlock">
    <Setter Property="Foreground" Value="White" />
  </Style>

  <!--  Card with Header and Content sections  -->
  <Style Selector="Border.Card > StackPanel > Border.CardHeader">
    <Setter Property="Padding" Value="16" />
    <Setter Property="Margin" Value="-16,-16,-16,0" />
    <Setter Property="BorderThickness" Value="0,0,0,1" />
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="CornerRadius" Value="8,8,0,0" />
  </Style>

  <Style Selector="Border.Card > StackPanel > Border.CardContent">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Margin" Value="0" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Background" Value="Transparent" />
  </Style>

  <!--  Card with Media (image area at top)  -->
  <Style Selector="Border.Card > StackPanel > Border.CardMedia">
    <Setter Property="Height" Value="200" />
    <Setter Property="Margin" Value="-16,-16,-16,16" />
    <Setter Property="CornerRadius" Value="8,8,0,0" />
    <Setter Property="ClipToBounds" Value="True" />
  </Style>

  <!--  Card Actions section at bottom  -->
  <Style Selector="Border.Card > StackPanel > Border.CardActions">
    <Setter Property="Padding" Value="8" />
    <Setter Property="Margin" Value="-16,8,-16,-16" />
    <Setter Property="BorderThickness" Value="0,1,0,0" />
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Divider}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="CornerRadius" Value="0,0,8,8" />
  </Style>

  <Style Selector="Border.Card > StackPanel > Border.CardActions > StackPanel">
    <Setter Property="Orientation" Value="Horizontal" />
    <Setter Property="HorizontalAlignment" Value="Right" />
    <Setter Property="Spacing" Value="8" />
  </Style>

  <!--  Horizontal Card Layout  -->

  <!--  Media side element style  -->
  <Style Selector="Border.Card.Horizontal > Grid > Border.CardMediaSide">
    <Setter Property="Width" Value="120" />
    <Setter Property="Margin" Value="-16" />
    <Setter Property="CornerRadius" Value="8,0,0,8" />
    <Setter Property="ClipToBounds" Value="True" />
  </Style>

  <!--  Content spacing style  -->
  <Style Selector="Border.Card.Horizontal > Grid > StackPanel">
    <Setter Property="Margin" Value="24,0,0,0" />
  </Style>

  <!--  Compact Card  -->
  <Style Selector="Border.Card.Compact">
    <Setter Property="Padding" Value="12" />
  </Style>

  <Style Selector="Border.Card.Compact > StackPanel > Border.CardHeader">
    <Setter Property="Padding" Value="12" />
    <Setter Property="Margin" Value="-12,-12,-12,0" />
  </Style>

  <Style Selector="Border.Card.Compact > StackPanel > Border.CardMedia">
    <Setter Property="Margin" Value="-12,-12,-12,12" />
  </Style>

  <Style Selector="Border.Card.Compact > StackPanel > Border.CardActions">
    <Setter Property="Padding" Value="4" />
    <Setter Property="Margin" Value="-12,4,-12,-12" />
  </Style>
</Styles>